# Hulu有很多直播资源需要付费订阅观看，世界杯期间，Hulu决定把部分比赛内容开放给普通用户免费观看。已知某频道将要连续播放的n场比赛列表，其中有的比赛有重播。工程师需要把该频道的n场比赛剪切成k个小片段，每个片段包括若干场比赛，然后把片段推荐给用户观看。剪切不能改变比赛列表的顺序，也不能将一场比赛从中间切断。研究发现，用户观看的片段中不同的比赛场次越多，用户越感兴趣。假设兴趣值为片段中不同的比赛出现次数，该频道的兴趣值为各个片段的兴趣值之和。工程师需要通过巧妙的剪切最大化该频道的兴趣值。

# 输入
# 第一行输入两个以空格分隔的整数n和k（1 <= n <= 5000, 1 <= k <= 100, k <= n），分别表示比赛场次和剪切片段数。
# 第二行输入以空格分隔的
# n个整数，a1,a2, … , an （1 <= ai <= n）, 分别表示每场比赛的ID。

# 输出
# 输出一个整数，表示最大的兴趣值。

# 样例输入
# 3 2
# 2 1 1
# 样例输出
# 3

# n, k = list(map(int, input().split()))
# s = list(map(int, input().split()))
n, k = 3, 2
s = [2,1,1]
max_window = n-k + 1
ret = 0
i, j = 0, 0
for i in range(n - max_window):
    ret = max(ret, sum(s[i:i+max_window]))
print(ret)